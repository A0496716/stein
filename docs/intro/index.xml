<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Getting Started on Stein Documentations</title>
    <link>https://b4b4r07.github.io/stein/intro/</link>
    <description>Recent content in Getting Started on Stein Documentations</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 17 Oct 2017 15:26:15 +0000</lastBuildDate>
    
	<atom:link href="https://b4b4r07.github.io/stein/intro/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Installing Stein</title>
      <link>https://b4b4r07.github.io/stein/intro/install/</link>
      <pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate>
      
      <guid>https://b4b4r07.github.io/stein/intro/install/</guid>
      <description>Installing Stein is simple. There are two approaches to installing Stein:
 Using a precompiled binary Installing from source  Downloading a precompiled binary is easiest, and we provide downloads over TLS along with SHA256 sums to verify the binary. We also distribute a PGP signature with the SHA256 sums that can be verified.
Precompiled Binaries To install the precompiled binary, download the appropriate package for your system. Stein is currently packaged as a zip file.</description>
    </item>
    
    <item>
      <title>Writing Stein rules</title>
      <link>https://b4b4r07.github.io/stein/intro/rules/</link>
      <pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate>
      
      <guid>https://b4b4r07.github.io/stein/intro/rules/</guid>
      <description>Let&amp;rsquo;s say you want to create a lint policy for the next YAML file.
apiVersion:v1metadata:name:my-service# namespace: echospec:selector:app:MyAppports:-protocol:TCPport:80targetPort:9376 This is Kubernetes YAML of Service manifest. The field metadata.namespace in Service can be omitted. However, let&amp;rsquo;s say you want to define it explicitly and force the owner to specify this. In such a case, Stein&amp;rsquo;s Rule is useful. A rule is simple block which can be represented by simple DSL schema by using HCL.</description>
    </item>
    
    <item>
      <title>Running Stein</title>
      <link>https://b4b4r07.github.io/stein/intro/run/</link>
      <pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate>
      
      <guid>https://b4b4r07.github.io/stein/intro/run/</guid>
      <description>Apply stein rules After writing up your rules, let&amp;rsquo;s run stein command.
The Stein CLI is a well-behaved command line application. In erroneous cases, a non-zero exit status will be returned. It also responds to -h and --help as you&amp;rsquo;d expect. To view a list of the available commands at any time, just run stein with no arguments.
To apply the rule to that YAML file and run the test you can do with the apply subcommand.</description>
    </item>
    
  </channel>
</rss>